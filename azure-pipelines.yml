trigger:
  - develop
  - master
  - release

pool:
  vmImage: "ubuntu-latest"

variables:
  buildConfiguration: "Release"

stages:
  - stage: DEV
    condition: eq(variables['Build.SourceBranchName'], 'develop')
    displayName: "Release to Dev"
    jobs:
      - job: Angular

        steps:

          - task: DownloadSecureFile@1
            name: enviromentProdFile
            displayName: 'Download enviroment prod ts file'
            inputs:
              secureFile: 'environment-prod'

          - script: |
              ls -la
              mv $(enviromentProdFile.secureFilePath) src/environments/environment.prod.ts
              ls -la src/environments/

          - task: NodeTool@0
            inputs:
              versionSpec: '14.x'
            displayName: 'Install Angular Cli With NodeJs'

          - script: |
              npm install -g @angular/cli
              ng config -g cli.warnings.versionMismatch false
              npm install
            displayName: 'npm install dependencies'

          - script: |
              ng build --configuration=production
            displayName: 'Generate Build Dist for Develop Enviroment'

          - script: |
              npm test
              ls -la ./coverage
              pwd
            displayName: 'Run unit tests'

          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'ngrx-example-sonar'
              organization: 'sofka-histore'
              scannerMode: 'CLI'
              configMode: 'file'

          - task: SonarCloudAnalyze@1

          - task: SonarCloudPublish@1
            inputs:
              pollingTimeoutSec: '300'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/dist/http-effects'
              Content: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/$(Build.SourceBranchName)'
              CleanTargetFolder: true

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/$(Build.SourceBranchName)'
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.SourceBranchName)/$(Build.BuildId).zip'
              replaceExistingArchive: true








